                ;***********************************************************
                ;
                ;       SUBROUTINE PARM
                ;
                ;       VERSION         3A
                ;       BILL SEILER
                ;       SEPT 6,1974
                ;
                ;       ADJUSTS THE PARAMETERS OF SPCWAR
                ;       R2=PTR AT RESET DATA
                ;
         000000         R0=%0
         000001         R1=%1
         000002         R2=%2
         000003         R3=%3
         000004         R4=%4
         000005         R5=%5
         000006         R6=%6
         000007         R7=%7
         000006         SP=R6
         000007         PC=R7
         000000         KSLOT=0
         000001         TSLOT=1
         000003         RSLOT=3
         000004         PSLOT=4
         000002         RESET=2
         000003         RESTRT=3
         000001         INIT=1
         000004         WAITR=4
         000011         READ=11
         000012         WRITE=12
         020000         EOF=20000
         000015         CR=15
         000012         LF=12
                        .TITLE  PARM
                        .GLOBL  PARM,$ICI,SPCWAR,AMMO,WIN,TSPEED
                        .GLOBL  GRVFLG,ORBIT,CENTER,PTREP,RES01
         000000         .CSECT
  000000 000004 PARM:   IOT
  000002 000000         0
  000004    002         .BYTE   RESET,0         ;INITIALIZATION
  000005    000
  000006 000004         IOT
  000010 000000'        SPCWAR
  000012    003         .BYTE   RESTRT,0        ;CTRL P WILL ERSTART AT SPCWAR
  000013    000
  000014 012767         MOV     #3,ANSWER+4     ;SET BUF COUNT ON ANSWER
         000003
         001154
  000022 000004         IOT
  000024 000470'        QUES1                   ;TYPE TITLE
  000026    012         .BYTE   WRITE,TSLOT     ;AND ASK IF CHANGE TO SPCWAR
  000027    001
  000030 000004         IOT
  000032 001172'        ANSWER
  000034    011         .BYTE   READ,KSLOT      ;READ REPLY

                        PAGE    001

  000035    000
  000036 000004 PARM01: IOT
  000040 000036'        PARM01
  000042    004         .BYTE   WAITR,KSLOT     ;WAIT FOR REPLY
  000043    000
  000044 122767         CMPB    #'Y,ANSWER+6    ;IS ANSWER YES?
         000131
         001126
  000052 001401         BEQ     PARM12          ;YES-THEN GO MAKE CHANGES
  000054 000207         RTS     PC              ;NO-GO START SPCWAR
  000056 005067'PARM12: CLR     GRVFLG          ;SET FOR NO GRAVITY
         000000
  000062 005067'        CLR     PTREP           ;SET FOR NO REAPPEAR TORPS
         000000
  000066 000004         IOT                     ;IS THERE TO BE GRAVITY
  000070 001034'        QUES5
  000072    012         .BYTE   WRITE,TSLOT
  000073    001
  000074 000004         IOT                     ;GET THE ANSWER
  000076 001172'        ANSWER
  000100    011         .BYTE   READ,KSLOT
  000101    000
  000102 000004 PARM14: IOT                     ;WAIT FOR THE ASNWER
  000104 000102'        PARM14
  000106    004         .BYTE   WAITR,KSLOT 
  000107    000
  000110 012700'        MOV     #CENTER,R0      ;GET RKT CENTER POSITION
         000000
  000114 010001         MOV     R0,R1           ;GET -CENTER
  000116 005401         NEG     R1
  000120 012703'        MOV     #ORBIT,R3       ;GET RKT ORBIT VELOCITY
         000000
  000124 010304         MOV     R3,R4           ;GET -ORBIT
  000126 005404         NEG     R4
  000130 012702'        MOV     #RES01,R2       ;SET UP RESET DATA PTR
         000000
  000134 122767         CMPB    #'Y,ANSWER+6    ;WAS ANSWER YES?
         000131
         001036
  000142 001014         BNE     PARM16          ;NO-THEN SKIP
  000144 012767'        MOV     #1,GRVFLG       ;YES-SET FLAG FOR GRAVITY
         000001
         000000
  000152 010022         MOV     R0,(R2)+        ;SET ESET DATA FROM GRAV START
  000154 005022         CLR     (R2)+
  000156 010122         MOV     R1,(R2)+
  000160 005022         CLR     (R2)+
  000162 005022         CLR     (R2)+
  000164 010322         MOV     R3,(R2)+
  000166 005022         CLR     (R2)+
  000170 010412         MOV     R4,(R2)
  000172 000410         BR      PARM17          ;SKIP TO NEXT QUESTION
  000174 010022 PARM16: MOV     R0,(R2)+        ;SET UP RESET DATA FOR NOGRAV
  000176 010022         MOV     R0,(R2)+
  000200 010122         MOV     R1,(R2)+
  000202 010122         MOV     R1,(R2)+

                        PAGE    002

  000204 005022         CLR     (R2)+
  000206 005022         CLR     (R2)+
  000210 005022         CLR     (R2)+
  000212 005012         CLR     (R2)
  000214 000004 PARM17: IOT                     ;ARE THE TORPS TO REAPPEAR?
  000216 001106'        QUES6
  000220    012         .BYTE   WRITE,TSLOT
  000221    001
  000222 000004         IOT                     ;GET THE ANSWER
  000224 001172'        ANSWER
  000226    011         .BYTE   READ,KSLOT
  000227    000
  000230 000004 PARM18: IOT                     ;WAIT FOR THE ANSWER
  000232 000230'        PARM18
  000234    004         .BYTE   WAITR,KSLOT
  000235    000
  000236 122767         CMPB    #'Y,ANSWER+6    ;WAS THE ASNWER YES?
         000131
         000734
  000244 001003         BNE     PARM02          ;NO-SO SKIP
  000246 012767'        MOV     #1,PTREP        ;YES-SET REAPPEARING TORP FLAG
         000001
         000000
  000254 000004 PARM02: IOT                     ;YES-THEN ASK # OF TORPEDOES
  000256 000616'        QUES2
  000260    012         .BYTE   WRITE,TSLOT 
  000261    001
  000262 012767         MOV     #10.,ANSWER+4   ;SET INITIAL BYTE COUNT
         000012
         000706
  000270 000004         IOT
  000272 001172'        ANSWER
  000274    011         .BYTE   READ,KSLOT      ;GET ANSWER
  000275    000
  000276 000004 PARM03: IOT
  000300 000276'        PARM03
  000302    004         .BYTE   WAITR,KSLOT     ;WAIT FOR THE ANSWER
  000303    000
  000304 012746'        MOV     #ANSWER+6,-(SP) ;PUSH FIELD START
         001200
  000310 016746         MOV     ANSWER+4,-(SP)  ;PUSH FILED LENGTH + CR&LF
         000662
  000314 162716         SUB     #2,(SP)         ;GET REAL LENGTH ON STK
         000002
  000320 004767'        JSR     PC,$ICI         ;CONVERT TO INTEGER
         000000
  000324 103002         BCC     PARM35          ;SKIP IF GOOD VALUE
  000326 005726         TST     (SP)+           ;POP BAD VALUE OFF STK
  000330 000751         BR      PARM02          ;ASK AGAIN
  000332 012667'PARM35: MOV     (SP)+,AMMO      ;SET UP AMMO
         000000
  000336 000004 PARM04: IOT
  000340 000700'        QUES3                   ;ASK FOR NUMBER OF HITS
  000342    012         .BYTE   WRITE,TSLOT
  000343    001
  000344 000004         IOT

                        PAGE    003

  000346 001172'        ANSWER
  000350    011         .BYTE   READ,KSLOT      ;GET ANSWER
  000351    000
  000352 000004 PARM05: IOT
  000354 000352'        PARM05
  000356    004         .BYTE   WAITR,KSLOT     ;WAIT FOR THE ANSWER
  000357    000
  000360 012746'        MOV     #ANSWER+6,-(SP) ;START
         001200
  000364 016746         MOV     ANSWER+4,-(SP)  ;LENGTH + CR&LF
         000606
  000370 162716         SUB     #2,(SP)         ;GET REAL LENGTH
         000002
  000374 004767'        JSR     PC,$ICI         ;CONVERT TO INTEGER
         000000
  000400 103002         BCC     PARM55          ;SKIP IF GOOD VALUE
  000402 005726         TST     (SP)+           ;POP BAD VALUE OFF STK
  000404 000754         BR      PARM04          ;ASK AGAIN
  000406 012667'PARM55: MOV     (SP)+,WIN       ;SET UP WIN
         000000
  000412 000004 PARM06: IOT
  000414 000760'        QUES4
  000416    012         .BYTE   WRITE,TSLOT     ;ASK FOR TORPEDO SPEED
  000417    001
  000420 000004         IOT
  000422 001172'        ANSWER
  000424    011         .BYTE   READ,KSLOT      ;GET ANSWER
  000425    000
  000426 000004 PARM07: IOT
  000430 000426'        PARM07
  000432    004         .BYTE   WAITR,KSLOT     ;WAIT FOR THE ANSWER
  000433    000
  000434 012746'        MOV     #ANSWER+6,-(SP) ;START FIELD
         001200
  000440 016746         MOV     ANSWER+4,-(SP)  ;LANGTH + CR&LF
         000532
  000444 162716         SUB     #2,(SP)         ;GET REAL LENGTH
         000002
  000450 004767'        JSR     PC,$ICI         ;CONVERT TO INTEGER
         000000
  000454 103002         BCC     PARM75          ;SKIP IF GOOD VALUE
  000456 005726         TST     (SP)+           ;POP BAD VALUE OFF STJ
  000460 000754         BR      PARM06          ;ASK AGAIN
  000462 012667'PARM75: MOV     (SP)+,TSPEED    ;SET TORPEDO SPEED
         000000
  000466 000207         RTS     PC              ;START SPCWAR!!!!!!!!!!!!!!!!!! 
  000470 000000 QUES1:  0
  000472 000000         0
  000474 000120 Q1BC:   Q1END-Q1BC-2
  000476    015         .BYTE   CR,LF
  000477    012
  000500    007         .ASCII  /SP        
  000501    006
  000502    007
  000503    006
  000504    007

                        PAGE    004

  000505    006
  000506    007
  000507    007
  000510    007
  000511    006
  000512    006
  000513    006
  000514    007
  000515    007
  000516    007
  000517    006
  000520    006
  000521    006
  000522    007
  000523    007
  000524    007
  000525    006
  000526    006
  000527    006
  000530    007
  000531    006
  000532    007
  000533    006
  000534    007
  000535    007
  000536    007
  000537    007
  000540    006
  000541    006
  000542    006
  000543    007
  000544    007
  000545    007
  000546    006
  000547    006
  000550    006
  000551    007
  000552    007
  000553    007
  000554    123
  000555    120
  000556    101
  000557    103
  000560    105
  000561    040
  000562    127
  000563    101
  000564    122
  000565    015         .BYTE   CR,LF
  000566    012
  000567    101         .ASCII  /ANY CHANGES? (YES-NO)/
  000570    116
  000571    131
  000572    040
  000573    103
  000574    110

                        PAGE    005

  000575    101
  000576    116
  000577    107
  000600    105
  000601    123
  000602    077
  000603    040
  000604    050
  000605    131
  000606    105
  000607    123
  000610    055
  000611    116
  000612    117
  000613    051
  000614    015         .BYTE   CR,LF
  000615    012
         000616 Q1END:  .EVEN
  000616 000000 QUES2:  0
  000620 000000         0
  000622 000054 Q2BC:   Q2END-Q2BC-2
  000624    111         .ASCII  /INPUT # OF TORPEDOS RKTS WILL HAVE. STD=64/
  000625    116
  000626    120
  000627    125
  000630    124
  000631    040
  000632    043
  000633    040
  000634    117
  000635    106
  000636    040
  000637    124
  000640    117
  000641    122
  000642    120
  000643    105
  000644    104
  000645    117
  000646    123
  000647    040
  000650    122
  000651    113
  000652    124
  000653    123
  000654    040
  000655    127
  000656    111
  000657    114
  000660    114
  000661    040
  000662    110
  000663    101
  000664    126
  000665    105
  000666    056

                        PAGE    006

  000667    040
  000670    123
  000671    124
  000672    104
  000673    075
  000674    066
  000675    064
  000676    015         .BYTE   CR,LF
  000677    012
         000700 Q2END:  .EVEN
  000700 000000 QUES3:  0
  000702 000000         0
  000704 000052 Q3BC:   Q3END-Q3BC-2
  000706    111         .ASCII  /INPUT # OF HITS TO DESTROY A RKT  STD=32/
  000707    116
  000710    120
  000711    125
  000712    124
  000713    040
  000714    043
  000715    040
  000716    117
  000717    106
  000720    040
  000721    110
  000722    111
  000723    124
  000724    123
  000725    040
  000726    124
  000727    117
  000730    040
  000731    104
  000732    105
  000733    123
  000734    124
  000735    122
  000736    117
  000737    131
  000740    040
  000741    101
  000742    040
  000743    122
  000744    113
  000745    124
  000746    040
  000747    040
  000750    123
  000751    124
  000752    104
  000753    075
  000754    063
  000755    062
  000756    015         .BYTE   CR,LF
  000757    012
         000760 Q3END:  .EVEN

                        PAGE    007

  000760 000000 QUES4:  0
  000762 000000         0
  000764 000045 Q4BC:   Q4END-Q4BC-2
  000766    111         .ASCII  /INPUT SPEED OF TORPEDOES. STD=16000/
  000767    116
  000770    120
  000771    125
  000772    124
  000773    040
  000774    123
  000775    120
  000776    105
  000777    105
  001000    104
  001001    040
  001002    117
  001003    106
  001004    040
  001005    124
  001006    117
  001007    122
  001010    120
  001011    105
  001012    104
  001013    117
  001014    105
  001015    123
  001016    056
  001017    040
  001020    123
  001021    124
  001022    104
  001023    075
  001024    061
  001025    066
  001026    060
  001027    060
  001030    060
  001031    015         .BYTE   CR,LF
  001032    012
         001034 Q4END:  .EVEN
  001034 000000 QUES5:  0
  001036 000000         0
  001040 000043 Q5BC:   Q5END-Q5BC-2
  001042    127         .ASCII  /WANT A SUN WITH GRAVITY? (YES-NO)/
  001043    101
  001044    116
  001045    124
  001046    040
  001047    101
  001050    040
  001051    123
  001052    125
  001053    116
  001054    040
  001055    127

                        PAGE    010

  001056    111
  001057    124
  001060    110
  001061    040
  001062    107
  001063    122
  001064    101
  001065    126
  001066    111
  001067    124
  001070    131
  001071    077
  001072    040
  001073    050
  001074    131
  001075    105
  001076    123
  001077    055
  001100    116
  001101    117
  001102    051
  001103    015         .BYTE   CR,LF
  001104    012
         001106 Q5END:  .EVEN
  001106 000000 QUES6:  0
  001110 000000         0
  001112 000055 Q6BC:   Q6END-Q6BC-2
  001114    127         .ASCII  /WANT REAPPEARING PHOTON TORPEDOES? (YES-NO)/
  001115    101
  001116    116
  001117    124
  001120    040
  001121    122
  001122    105
  001123    101
  001124    120
  001125    120
  001126    105
  001127    101
  001130    122
  001131    111
  001132    116
  001133    107
  001134    040
  001135    120
  001136    110
  001137    117
  001140    124
  001141    117
  001142    116
  001143    040
  001144    124
  001145    117
  001146    122
  001147    120
  001150    105

                        PAGE    011

  001151    104
  001152    117
  001153    105
  001154    123
  001155    077
  001156    040
  001157    050
  001160    131
  001161    105
  001162    123
  001163    055
  001164    116
  001165    117
  001166    051
  001167    015         .BYTE   CR,LF
  001170    012
         001172 Q6END:  .EVEN
  001172 000014 ANSWER: 12.                        ;BUFFER SIZE
  001174 000000         0                          ;FORMATTED ASCII
  001176 000000         0
         001214         .=.+12.
         001214         .EVEN
         000001         .END

                        PAGE    012

