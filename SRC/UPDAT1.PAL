;*****************************************************
;
;               SUBROUTINE UPDAT1
;
;               VERSION         3B
;               BILL SEILER
;               AUG. 24,1974
;       UPDATES RKT1 AND FIRES ITS TORPEDOES
;       ENTER THE ROUTINE WITH R2 A POINTER AT YSIZE
;       AND #401 PUSHED INTO THE ADCS
;       R0=MULTIPLIER (NOT DESTROYED)
;       R2=POINTER AT RKT DATA
;       R3=LOW WORD RESULT OF MULPLY
;       R4=HIGH WORD RESULT OF MULPLY AND MULTIPLICAN(DESTRYED)
;       R5=SINE OF ANGLE IN SINCOS RETURN
        R0=%0
        R1=%1
        R2=%2
        R3=%3
        R4=%4
        R5=%5
        R6=%6
        R7=%7
        SP=R6
        PC=R7
        .TITLE  UPDAT1
        .GLOBL  UPDAT1,MULPLY,SINCOS,PTNUM,ANGH1,ANGL1
        .GLOBL  XDISP1,YDISP1,XVELL1,YVELL1,XVELH1,YVELH1
        .GLOBL  XSIZE1,YSIZE1,FLAG1,FIRE,TSPEED,RKTSIZ
        .GLOBL  ANGMID,SHOTS1,ADCS,ADBR
        .CSECT
UPDAT1: MOV     ANGH1,R0        ;GET ANG1
        JSR     PC,SINCOS       ;DO A SINCOS
        MOV     R0,ANGH1        ;SAVE NORMALIZED ANGH1
        MOV     #RKTSIZ,R0      ;SET RKT SIZE
        JSR     PC,MULPLY       ;RKTSIZE*COS(ANGH1)
        MOV     R4,XSIZE1       ;XSIZE1-RKTSIZE*COS(ANGH1)
        MOV     R5,R4           ;PUT SINE IN FOR MULPLY
        JSR     PC,MULPLY       ;RKTSIZE*SIN(ANGH1)
        MOV     R4,(R2)+        ;YSIZE1?RKTSIZE*SIN(ANGH1)
UPD101  TSTB    ADCS	        ;CHECK IF A TO D IS READY
        BPL     UPD101          ;WAIT SOME MORE
        MOV     ADBR,R0         ;GET ACC1 FROM ATOD
        MOV     #1,ADCS         ;START ATOD FOR ANGL1
        TST     (R2)+           ;DID RKT1 FIRE LAST LOOP?
        BGT     UPD11           ;YES-DONT FIRE THIS TIME
        CMP     #FIRE,R0        ;NO-IS RKT1 FIRING NOW?
        BGT     UPD13           ;NO-UPDATE RKT1 VEL
        DEC     SHOTS1          ;YES-ANY TORPS LEFT?
        BLE     UPD115          ;NO-THEN OUT OF AMMO!
        INC     FLAG1           ;YES-SET THE FLAG AND DHOOW
        MOV     #PTNUM,R5       ;SET UP PTR AT PTS
        MOV     (R5),R0         ;GET # TORPS
        INC     (R5)+           ;ADD ONE MORE TO TORP CTR
        ASL     R0   
        ASL     R0   
        ASL     R0              ;MULT BY 8 TO SKIP PRESENT PTS
        ADD     R0,R5           ;MOVE PTR OVER PRESENT PTS
        MOV     TSPEED,R0       ;SET FOR MULPLY
        JSR     PC,MULPLY       ;TSPEED*YSIZE1
        ADD     (R2)+,R3        ;ADD YVELL1 TO TSPEED*YSIZE1
        ADC     R4              ;ADD CARRY
        ADD     (R2)+,R4        ;ADD HIH ORDER WORDS
        MOV     R4,(R5)+        ;PUT TORP Y VEL IN ARRAY
        MOV     (R2)+,(R5)      ;PUT YDISP1 IN ARRAY
        ADD     YSIZE1,(R5)     ;CALC YNOSE1 IN ARRAY
        ADD     R4,(R5)+        ;UPDATE TORP OUT OF RKT1
        MOV     (R2)+,R4        ;SET XSIZE1 FOR MULPLY
        JSR     PC,MULPLY       ;TSPEED*XSIZE1
        ADD     (R2)+,R3        ;ADD LOW ORDER WORDS
        ADC     R4              ;ADD CARRY TO HIGH WORD
        ADD     (R2)+,R4        ;ADD HIGH ORDER WORDS
        MOV     R4,(R5)+        ;PUT TORP XVEL IN ARRAY
        MOV     (R2)+,(R5)      ;PUT XDISP1 IN ARRAY
        ADD     XSIZE1,(R5)     ;CALC XNOSE1 IN ARRAY
        ADD     R4,(R5)+        ;UPDATE TORP OUT OF RKT1
        BR      UPD117          ;GO UPDAT RKT1 POSITION
UPD11:  CMP     #FIRE,R0        ;RKT1 STILL FIRING?
        BGT     UPD12           ;NO-GO UPDATE VEL OF RKT1
UPD115: ADD     #14.,R2         ;YES-MOV PTR TO ANGLES
UPD117: ADD     YVELH1,YDISP1   ;THEN UPDATE DISP ONLY
        ADD     XVELH1,XDISP1   ;   NOT VEL.
        BR      UPD14           ;GO UPDATE ANGLES
UPD12:  CLR     FLAG1           ;NOT FIRING SO CLEAR FLAG1
UPD13:  JSR     PC,MULPLY       ;ACC1*YSIZE1(IN R4)
        ASR     R4
        ROR     R3
        ASR     R4
        ROR     R3
        ASR     R4
        ROR     R3              ;SCALE YACC1 
        ADD     R3,(R2)+        ;YVELL1=YVELL1+ACC1*YSIZE1
        ADC     R4              ;ADD CARRY
        ADD     R4,(R2)         ;YVELH1=YVELH1+ACCH1
        ADD     (R2)+,(R2)+     ;YDISP1=YDISP1+YVELH1
        MOV     (R2)+,R4        ;MOV XSIZE1 IN FOR MULPLY
        JSR     PC,MULPLY       ;ACC1*XSIZE1
        ASR     R4
        ROR     R3
        ASR     R4
        ROR     R3
        ASR     R4
        ROR     R3              ;SCALE XACC1
        ADD     R3,(R2)+        ;XVELL1=XVELL1+ACC1*XSIZE1
        ADC     R4              ;ADD CARRY
        ADD     R4,(R2)         ;XVELH1=XVELH1+ACCH1
        ADD     (R2)+,(R2)+     ;XDISP1=XDISP1+XVELH1
UPD14:  TSTB    ADCS            ;TEST IF A TO D IS READY
        BPL     UPD14           ;WAIT SOME MORE?
	MOV     ADBR,R0         ;GET ATOD ANGL1
        MOV     #1401,ADCS      ;START ATOD FOR ACC2
        CLR     R1              ;CLEAR FOR FAKE SIGN EXTEND
        SUB     #ANGMID,R0      ;CENTER CONTROL # FOR ANGLE
        BPL     UPD15           ;IF POSITIVE SKIP R1=0
        DEC     R1              ;MAKE R1=-1 (177777)
UPD15:  SWAB    R0              ;GET HIGH BYTE IN LOW R1
        MOVB    R0,R1           ;PUT IN LOW OF R1
        CLRB    R0              ;CLEAR LOW BYTE OF R0
        ADD     R0,(R2)+        ;ADD LOW WORDS
        ADC     R1              ;ADD CARRY TO HIGH WORD
        ADD     R1,(R2)+        ;ADD HIGH WORDS
        RTS     PC              ;ALL DONE!!!!!!!!!!!!!!!!!!!!!
        .END



